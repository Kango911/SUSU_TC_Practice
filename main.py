import json
import os


def get_user_info():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
    print("=" * 60)
    print("üéì –°–ò–°–¢–ï–ú–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò –°–¢–£–î–ï–ù–¢–ê")
    print("=" * 60)

    while True:
        name = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û: ").strip()
        if name:
            break
        print("‚ùå –§–ò–û –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è.")

    while True:
        group = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —É—á–µ–±–Ω—É—é –≥—Ä—É–ø–ø—É: ").strip()
        if group:
            break
        print("‚ùå –ì—Ä—É–ø–ø–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –≥—Ä—É–ø–ø—É.")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_data = {
        "name": name,
        "group": group,
        "login_count": 1
    }

    # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ª–æ–≥–∏–Ω–æ–≤
    try:
        if os.path.exists('user_history.json'):
            with open('user_history.json', 'r', encoding='utf-8') as f:
                history = json.load(f)
                if history.get("name") == name and history.get("group") == group:
                    user_data["login_count"] = history.get("login_count", 0) + 1
    except:
        pass

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é
    with open('user_history.json', 'w', encoding='utf-8') as f:
        json.dump(user_data, f, ensure_ascii=False, indent=2)

    return name, group


def show_welcome_message(name, group, login_count):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    print("\n" + "=" * 60)
    print(f"üéâ –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨, {name.upper()}!")
    print("=" * 60)
    print(f"üìö –£—á–µ–±–Ω–∞—è –≥—Ä—É–ø–ø–∞: {group}")
    print(f"üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—É—Å–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º—ã: {login_count}")
    print("=" * 60)


def main():
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    name, group = get_user_info()

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ª–æ–≥–∏–Ω–æ–≤ –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    login_count = 1
    try:
        if os.path.exists('user_history.json'):
            with open('user_history.json', 'r', encoding='utf-8') as f:
                data = json.load(f)
                login_count = data.get("login_count", 1)
    except:
        pass

    show_welcome_message(name, group, login_count)

    while True:
        print(f"\n{name}, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞:")
        print("1. üèôÔ∏è  –ü—Ä–æ–≥—Ä–∞–º–º–∞ '–ì–æ—Ä–æ–¥–∞ –†–æ—Å—Å–∏–∏'")
        print("2. ‚ûï –ü—Ä–æ–≥—Ä–∞–º–º–∞ '–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã'")
        print("3. üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        print("4. ‚ùå –í—ã—Ö–æ–¥")

        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–æ–≥—Ä–∞–º–º—ã (1-4): ").strip()

        if choice == '1':
            from city_program import city_program
            city_program(name)
        elif choice == '2':
            from math_program import math_program
            math_program(name)
        elif choice == '3':
            show_user_statistics(name, group)
        elif choice == '4':
            print(f"\n–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º, {name}!")
            print("üìÅ –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ GitHub: https://github.com/Kango911")
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 4.")


def show_user_statistics(name, group):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("\n" + "=" * 50)
    print("üìä –í–ê–®–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê")
    print("=" * 50)
    print(f"üë§ –§–ò–û: {name}")
    print(f"üìö –ì—Ä—É–ø–ø–∞: {group}")

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≥–æ—Ä–æ–¥–∞–º
    cities_count = 0
    if os.path.exists('cities.json'):
        with open('cities.json', 'r', encoding='utf-8') as f:
            cities_data = json.load(f)
            cities_count = len(cities_data)

    print(f"üèôÔ∏è  –ì–æ—Ä–æ–¥–æ–≤ –≤ –±–∞–∑–µ: {cities_count}")

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ
    math_stats = {"total_questions": 0, "correct_answers": 0}
    if os.path.exists('math_stats.json'):
        try:
            with open('math_stats.json', 'r', encoding='utf-8') as f:
                math_stats = json.load(f)
        except:
            pass

    if math_stats["total_questions"] > 0:
        success_rate = (math_stats["correct_answers"] / math_stats["total_questions"]) * 100
        print(f"üßÆ –†–µ—à–µ–Ω–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–≤: {math_stats['total_questions']}")
        print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {math_stats['correct_answers']}")
        print(f"üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {success_rate:.1f}%")
    else:
        print("üßÆ –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã: –µ—â–µ –Ω–µ —Ä–µ—à–µ–Ω—ã")

    print("=" * 50)


if __name__ == "__main__":
    main()